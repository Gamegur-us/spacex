{"version":3,"sources":["webpack:///bundle.js","webpack:///./app/src/Game.ts","webpack:///./app/src/state/Boot.ts","webpack:///./app/src/state/Main.ts","webpack:///./app/src/state/Preload.ts","webpack:///./app/src/state/States.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","States_1","Game","_super","call","width","height","transparent","enableDebug","state","add","Boot","Preload","Main","start","Phaser","window","onload","apply","arguments","preload","load","image","game","stage","backgroundColor","input","maxPointers","disableVisibilityChange","State","spritesheet","activePointer","x","y","lastBulletShotAt","background","tileSprite","player","sprite","gun","addChild","anchor","set","animations","play","physics","enable","Physics","ARCADE","body","gravity","setSize","floor","immovable","allowGravity","bulletPool","group","i","bullet","setTo","kill","shootBullet","SHOT_DELAY","time","now","getFirstDead","revive","checkWorldBounds","outOfBoundsKill","reset","lastRotation","arcade","angleToPointer","Math","cos","rotation","PI","BULLET_SPEED","velocity","sin","update","_this","collide","smoke","alpha","anim","onComplete","addOnce","scale","visible","isDown","deltaX","deltaY","touching","down","preloadBar","setPreloadSprite","Main_1","Preload_1","Boot_1"],"mappings":"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","file":"bundle.js","sourcesContent":["webpackJsonp([1],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"./defs/definitions.d.ts\"/>\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar States_1 = __webpack_require__(8);\n\tvar Game = (function (_super) {\n\t    __extends(Game, _super);\n\t    function Game() {\n\t        _super.call(this, {\n\t            width: 800,\n\t            height: 600,\n\t            transparent: false,\n\t            enableDebug: true\n\t        });\n\t        this.state.add('boot', States_1.Boot);\n\t        this.state.add('preload', States_1.Preload);\n\t        this.state.add('main', States_1.Main);\n\t        this.state.start('boot');\n\t    }\n\t    return Game;\n\t}(Phaser.Game));\n\twindow.onload = function () {\n\t    new Game();\n\t};\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Boot = (function (_super) {\n\t    __extends(Boot, _super);\n\t    function Boot() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Boot.prototype.preload = function () {\n\t        this.load.image('preload-bar', 'assets/loading.png');\n\t    };\n\t    Boot.prototype.create = function () {\n\t        this.game.stage.backgroundColor = 0xFFFFFF;\n\t        this.input.maxPointers = 1;\n\t        this.stage.disableVisibilityChange = true;\n\t        this.game.state.start('preload');\n\t    };\n\t    return Boot;\n\t}(Phaser.State));\n\texports.Boot = Boot;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Main = (function (_super) {\n\t    __extends(Main, _super);\n\t    function Main() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    // 10 52px\n\t    Main.prototype.preload = function () {\n\t        this.load.spritesheet('player', 'assets/player.png', 32, 29, 2);\n\t        this.load.image('bg', 'assets/bg.png');\n\t        this.load.image('gun', 'assets/gun.png');\n\t        this.load.image('bullet', 'assets/bullet.png');\n\t        this.load.image('pixel', 'assets/pixel.png');\n\t        this.load.spritesheet('smoke', 'assets/humo1.png', 52, 52, 10);\n\t    };\n\t    Main.prototype.create = function () {\n\t        this.game.input.activePointer.x = this.game.width / 2;\n\t        this.game.input.activePointer.y = this.game.height / 2;\n\t        this.lastBulletShotAt = 0;\n\t        this.background = this.add.tileSprite(0, 200, 586 * 4, 552, 'bg');\n\t        this.player = this.add.sprite(200, 390, 'player');\n\t        this.gun = this.add.sprite(0, 0, 'gun');\n\t        this.player.addChild(this.gun);\n\t        // this.player.gun = gun;\n\t        //this.gun.anchor.set(0, 0.5);\n\t        this.player.anchor.set(0.5);\n\t        this.player.animations.add('walk').play(4, true);\n\t        // Enable physics on the player\n\t        this.physics.enable(this.player, Phaser.Physics.ARCADE);\n\t        this.player.body.gravity.y = 300;\n\t        this.player.body.setSize(20, 26, 0, 0);\n\t        this.floor = this.add.sprite(0, 420, null);\n\t        this.physics.enable(this.floor, Phaser.Physics.ARCADE);\n\t        this.floor.body.setSize(860, 50, 0, 0);\n\t        this.floor.body.immovable = true;\n\t        this.floor.body.allowGravity = false;\n\t        this.bulletPool = this.game.add.group();\n\t        for (var i = 0; i < 30; i++) {\n\t            // Create each bullet and add it to the group.\n\t            var bullet = this.game.add.sprite(0, 0, 'bullet');\n\t            this.bulletPool.add(bullet);\n\t            // Set its pivot point to the center of the bullet\n\t            bullet.anchor.setTo(0.5, 0.5);\n\t            // Enable physics on the bullet\n\t            this.game.physics.enable(bullet, Phaser.Physics.ARCADE);\n\t            // Set its initial state to \"dead\".\n\t            bullet.kill();\n\t        }\n\t    };\n\t    Main.prototype.shootBullet = function () {\n\t        // Enforce a short delay between shots by recording\n\t        // the time that each bullet is shot and testing if\n\t        // the amount of time since the last shot is more than\n\t        // the required delay.\n\t        var SHOT_DELAY = 190;\n\t        if (this.game.time.now - this.lastBulletShotAt < SHOT_DELAY)\n\t            return;\n\t        this.lastBulletShotAt = this.game.time.now;\n\t        // Get a dead bullet from the pool\n\t        var bullet = this.bulletPool.getFirstDead();\n\t        // If there aren't any bullets available then don't shoot\n\t        if (!bullet) {\n\t            return false;\n\t        }\n\t        // Revive the bullet\n\t        // This makes the bullet \"alive\"\n\t        bullet.revive();\n\t        // Bullets should kill themselves when they leave the world.\n\t        // Phaser takes care of this for me by setting this flag\n\t        // but you can do it yourself by killing the bullet if\n\t        // its x,y coordinates are outside of the world.\n\t        bullet.checkWorldBounds = true;\n\t        bullet.outOfBoundsKill = true;\n\t        // Set the bullet position to the gun position.\n\t        bullet.reset(this.player.x, this.player.y);\n\t        this.lastRotation = this.game.physics.arcade.angleToPointer(this.player);\n\t        this.gun.anchor.set(0, 0.5);\n\t        if (Math.cos(this.lastRotation) < 0) {\n\t            this.gun.rotation = Math.PI - this.lastRotation;\n\t        }\n\t        else {\n\t            this.gun.rotation = this.lastRotation;\n\t        }\n\t        bullet.rotation = this.lastRotation;\n\t        var BULLET_SPEED = 180;\n\t        // Shoot it in the right direction\n\t        bullet.body.velocity.x = Math.cos(bullet.rotation) * BULLET_SPEED;\n\t        bullet.body.velocity.y = Math.sin(bullet.rotation) * BULLET_SPEED;\n\t        return true;\n\t    };\n\t    Main.prototype.update = function () {\n\t        var _this = this;\n\t        this.game.physics.arcade.collide(this.player, this.floor);\n\t        this.game.physics.arcade.collide(this.bulletPool, this.floor, function (floor, b) {\n\t            /*const particles = this.add.emitter(b.body.x, b.body.y, 100);\n\t            particles.makeParticles('pixel');\n\t            particles.gravity = -200;\n\t            // this.smokeEmitter.start(false, this.SMOKE_LIFETIME, 50);\n\t            particles.start(true, 2000, null, 10);*/\n\t            var smoke = _this.add.sprite(b.body.x, b.body.y, 'smoke');\n\t            smoke.alpha = 0.8;\n\t            smoke.anchor.set(0.5);\n\t            var anim = smoke.animations.add('burn');\n\t            anim.onComplete.addOnce(function () { return smoke.kill(); });\n\t            anim.play();\n\t            b.kill();\n\t        });\n\t        // console.log(this.player.x);\n\t        this.background.x -= 1.5;\n\t        if (this.background.x < -586) {\n\t            this.background.x = 0;\n\t        }\n\t        this.player.scale.x = 1;\n\t        this.gun.visible = false;\n\t        // Shoot a bullet\n\t        if (this.game.input.activePointer.isDown) {\n\t            this.gun.visible = true;\n\t            this.shootBullet();\n\t            var deltaX = Math.cos(this.lastRotation);\n\t            var deltaY = Math.sin(this.lastRotation);\n\t            // const speedX = deltaX * 100 * -1;\n\t            // const speedY = deltaY * 100 * -1;\n\t            // console.log(deltaX, deltaY);\n\t            if (deltaX < 0) {\n\t                this.player.scale.x = -1;\n\t            }\n\t            this.background.x += (deltaX / 2);\n\t            // console.log(speedX / 2);\n\t            if (this.player.body.touching.down) {\n\t                if (deltaY > 0.6) {\n\t                    this.player.body.velocity.y = -250;\n\t                }\n\t            }\n\t            else {\n\t                if (this.player.body.velocity.y > 80 && deltaY > 0.6) {\n\t                    this.player.body.velocity.y = 80;\n\t                }\n\t                else {\n\t                    this.player.body.velocity.y -= deltaY * 2;\n\t                }\n\t            }\n\t        }\n\t    };\n\t    return Main;\n\t}(Phaser.State));\n\texports.Main = Main;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Preload = (function (_super) {\n\t    __extends(Preload, _super);\n\t    function Preload() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Preload.prototype.preload = function () {\n\t        this.preloadBar = this.add.sprite(290, 290, 'preload-bar');\n\t        this.load.setPreloadSprite(this.preloadBar);\n\t    };\n\t    Preload.prototype.create = function () {\n\t        this.game.state.start('main');\n\t    };\n\t    return Preload;\n\t}(Phaser.State));\n\texports.Preload = Preload;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Main_1 = __webpack_require__(6);\n\texports.Main = Main_1.Main;\n\tvar Preload_1 = __webpack_require__(7);\n\texports.Preload = Preload_1.Preload;\n\tvar Boot_1 = __webpack_require__(5);\n\texports.Boot = Boot_1.Boot;\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/","/// <reference path=\"./defs/definitions.d.ts\"/>\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar States_1 = require('./state/States');\nvar Game = (function (_super) {\n    __extends(Game, _super);\n    function Game() {\n        _super.call(this, {\n            width: 800,\n            height: 600,\n            transparent: false,\n            enableDebug: true\n        });\n        this.state.add('boot', States_1.Boot);\n        this.state.add('preload', States_1.Preload);\n        this.state.add('main', States_1.Main);\n        this.state.start('boot');\n    }\n    return Game;\n}(Phaser.Game));\nwindow.onload = function () {\n    new Game();\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/src/Game.ts\n ** module id = 0\n ** module chunks = 1\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Boot = (function (_super) {\n    __extends(Boot, _super);\n    function Boot() {\n        _super.apply(this, arguments);\n    }\n    Boot.prototype.preload = function () {\n        this.load.image('preload-bar', 'assets/loading.png');\n    };\n    Boot.prototype.create = function () {\n        this.game.stage.backgroundColor = 0xFFFFFF;\n        this.input.maxPointers = 1;\n        this.stage.disableVisibilityChange = true;\n        this.game.state.start('preload');\n    };\n    return Boot;\n}(Phaser.State));\nexports.Boot = Boot;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/src/state/Boot.ts\n ** module id = 5\n ** module chunks = 1\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Main = (function (_super) {\n    __extends(Main, _super);\n    function Main() {\n        _super.apply(this, arguments);\n    }\n    // 10 52px\n    Main.prototype.preload = function () {\n        this.load.spritesheet('player', 'assets/player.png', 32, 29, 2);\n        this.load.image('bg', 'assets/bg.png');\n        this.load.image('gun', 'assets/gun.png');\n        this.load.image('bullet', 'assets/bullet.png');\n        this.load.image('pixel', 'assets/pixel.png');\n        this.load.spritesheet('smoke', 'assets/humo1.png', 52, 52, 10);\n    };\n    Main.prototype.create = function () {\n        this.game.input.activePointer.x = this.game.width / 2;\n        this.game.input.activePointer.y = this.game.height / 2;\n        this.lastBulletShotAt = 0;\n        this.background = this.add.tileSprite(0, 200, 586 * 4, 552, 'bg');\n        this.player = this.add.sprite(200, 390, 'player');\n        this.gun = this.add.sprite(0, 0, 'gun');\n        this.player.addChild(this.gun);\n        // this.player.gun = gun;\n        //this.gun.anchor.set(0, 0.5);\n        this.player.anchor.set(0.5);\n        this.player.animations.add('walk').play(4, true);\n        // Enable physics on the player\n        this.physics.enable(this.player, Phaser.Physics.ARCADE);\n        this.player.body.gravity.y = 300;\n        this.player.body.setSize(20, 26, 0, 0);\n        this.floor = this.add.sprite(0, 420, null);\n        this.physics.enable(this.floor, Phaser.Physics.ARCADE);\n        this.floor.body.setSize(860, 50, 0, 0);\n        this.floor.body.immovable = true;\n        this.floor.body.allowGravity = false;\n        this.bulletPool = this.game.add.group();\n        for (var i = 0; i < 30; i++) {\n            // Create each bullet and add it to the group.\n            var bullet = this.game.add.sprite(0, 0, 'bullet');\n            this.bulletPool.add(bullet);\n            // Set its pivot point to the center of the bullet\n            bullet.anchor.setTo(0.5, 0.5);\n            // Enable physics on the bullet\n            this.game.physics.enable(bullet, Phaser.Physics.ARCADE);\n            // Set its initial state to \"dead\".\n            bullet.kill();\n        }\n    };\n    Main.prototype.shootBullet = function () {\n        // Enforce a short delay between shots by recording\n        // the time that each bullet is shot and testing if\n        // the amount of time since the last shot is more than\n        // the required delay.\n        var SHOT_DELAY = 190;\n        if (this.game.time.now - this.lastBulletShotAt < SHOT_DELAY)\n            return;\n        this.lastBulletShotAt = this.game.time.now;\n        // Get a dead bullet from the pool\n        var bullet = this.bulletPool.getFirstDead();\n        // If there aren't any bullets available then don't shoot\n        if (!bullet) {\n            return false;\n        }\n        // Revive the bullet\n        // This makes the bullet \"alive\"\n        bullet.revive();\n        // Bullets should kill themselves when they leave the world.\n        // Phaser takes care of this for me by setting this flag\n        // but you can do it yourself by killing the bullet if\n        // its x,y coordinates are outside of the world.\n        bullet.checkWorldBounds = true;\n        bullet.outOfBoundsKill = true;\n        // Set the bullet position to the gun position.\n        bullet.reset(this.player.x, this.player.y);\n        this.lastRotation = this.game.physics.arcade.angleToPointer(this.player);\n        this.gun.anchor.set(0, 0.5);\n        if (Math.cos(this.lastRotation) < 0) {\n            this.gun.rotation = Math.PI - this.lastRotation;\n        }\n        else {\n            this.gun.rotation = this.lastRotation;\n        }\n        bullet.rotation = this.lastRotation;\n        var BULLET_SPEED = 180;\n        // Shoot it in the right direction\n        bullet.body.velocity.x = Math.cos(bullet.rotation) * BULLET_SPEED;\n        bullet.body.velocity.y = Math.sin(bullet.rotation) * BULLET_SPEED;\n        return true;\n    };\n    Main.prototype.update = function () {\n        var _this = this;\n        this.game.physics.arcade.collide(this.player, this.floor);\n        this.game.physics.arcade.collide(this.bulletPool, this.floor, function (floor, b) {\n            /*const particles = this.add.emitter(b.body.x, b.body.y, 100);\n            particles.makeParticles('pixel');\n            particles.gravity = -200;\n            // this.smokeEmitter.start(false, this.SMOKE_LIFETIME, 50);\n            particles.start(true, 2000, null, 10);*/\n            var smoke = _this.add.sprite(b.body.x, b.body.y, 'smoke');\n            smoke.alpha = 0.8;\n            smoke.anchor.set(0.5);\n            var anim = smoke.animations.add('burn');\n            anim.onComplete.addOnce(function () { return smoke.kill(); });\n            anim.play();\n            b.kill();\n        });\n        // console.log(this.player.x);\n        this.background.x -= 1.5;\n        if (this.background.x < -586) {\n            this.background.x = 0;\n        }\n        this.player.scale.x = 1;\n        this.gun.visible = false;\n        // Shoot a bullet\n        if (this.game.input.activePointer.isDown) {\n            this.gun.visible = true;\n            this.shootBullet();\n            var deltaX = Math.cos(this.lastRotation);\n            var deltaY = Math.sin(this.lastRotation);\n            // const speedX = deltaX * 100 * -1;\n            // const speedY = deltaY * 100 * -1;\n            // console.log(deltaX, deltaY);\n            if (deltaX < 0) {\n                this.player.scale.x = -1;\n            }\n            this.background.x += (deltaX / 2);\n            // console.log(speedX / 2);\n            if (this.player.body.touching.down) {\n                if (deltaY > 0.6) {\n                    this.player.body.velocity.y = -250;\n                }\n            }\n            else {\n                if (this.player.body.velocity.y > 80 && deltaY > 0.6) {\n                    this.player.body.velocity.y = 80;\n                }\n                else {\n                    this.player.body.velocity.y -= deltaY * 2;\n                }\n            }\n        }\n    };\n    return Main;\n}(Phaser.State));\nexports.Main = Main;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/src/state/Main.ts\n ** module id = 6\n ** module chunks = 1\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Preload = (function (_super) {\n    __extends(Preload, _super);\n    function Preload() {\n        _super.apply(this, arguments);\n    }\n    Preload.prototype.preload = function () {\n        this.preloadBar = this.add.sprite(290, 290, 'preload-bar');\n        this.load.setPreloadSprite(this.preloadBar);\n    };\n    Preload.prototype.create = function () {\n        this.game.state.start('main');\n    };\n    return Preload;\n}(Phaser.State));\nexports.Preload = Preload;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/src/state/Preload.ts\n ** module id = 7\n ** module chunks = 1\n **/","\"use strict\";\nvar Main_1 = require('./Main');\nexports.Main = Main_1.Main;\nvar Preload_1 = require('./Preload');\nexports.Preload = Preload_1.Preload;\nvar Boot_1 = require('./Boot');\nexports.Boot = Boot_1.Boot;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/src/state/States.ts\n ** module id = 8\n ** module chunks = 1\n **/"],"sourceRoot":""}